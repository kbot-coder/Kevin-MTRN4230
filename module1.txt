MODULE Task_1
    PERS  pos position:= [175,520,147];
    PERS  robjoint jointpos:= [1,2,3,4,5,6];
    PERS bool startbitch := FALSE;
    PERS num mode := 0;
    ! The Main procedure. When you select 'PP to Main' on the FlexPendant, it will go to this procedure.
    PROC MainMove()
        
        
        VAR num A:= 0; 
        VAR num B:= 0; 
        VAR num C:= 0; 
        VAR num D:= 0;
        VAR num E:= 0; 
        VAR num F:= 0; 
        VAR robjoint jointsJ ;
        VAR pos targetL;
        VAR pos targetL_J := [0,0,0];
        WaitUntil startbitch;
        jointsJ:=jointpos;
        targetL:= position;
        
        ! This is a procedure defined in a System Module, so you will have access to it.
        ! This will move the robot to its calibration.
        ! Call a procedure that we have defined below.
        !VAR intnum A := 100;
        !VAR robjoint jointsManual := [A,0,0,0,0,0];
        !linearTarget = [100,200,30];
        !MoveJSample (jointsManual);
        !MoveToCalibPos;
        ! Call another procedure that we have defined.
        ! MoveLSample;
        ! Call another procedure, but provide some input arguments.
        !VariableSample pTableHome, 100, 100, 0, v100, fine;
        !FOR i FROM 1 TO 30 DO
            !A:= A+5;
            !B:= B-1;
            !C:= C+1;
            !jointsJ.rax_1 := A;
            !jointsJ.rax_2 := B;
            !jointsJ.rax_3 := C;
        weAllLoveMTRN mode, targetL_J, targetL, jointsJ ;    
        !ENDFOR
        
       !targetManual := [175,-520,147];
        !weAllLoveMTRN mode, targetNotManual, targetManual,jointsManual ;
          
        startbitch:=FALSE;
    ENDPROC
    
    PROC weAllLoveMTRN(num iWantThis, pos targetL_J, pos targetL,robjoint jointsJ)
        targetL_J.x := targetL.x;
        targetL_J.y := targetL.y;
        targetL_J.z := 300;
            
         IF iWantThis = 0 THEN
                !move lin
                !MoveAbsJ[[0,0,0,0,50,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]] , v300, fine ,tSCup ;
                !MoveAbsJ [[0,0,0,0,50,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]] , v500, fine ,tSCup ;
                
                MoveJ ([targetL_J,[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]]), v500,fine,tSCup;
                
                MoveL ([targetL,[0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]]), v500, fine, tSCup;
            
            ELSEIF iWantThis = 1  THEN
                !move joint
                
                MoveAbsJ [jointsJ,[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]], v500, fine, tSCup;
                
            ELSE
                MoveToCalibPos;
                
            ENDIF
            
    ENDPROC
         
            
   
    
ENDMODULE